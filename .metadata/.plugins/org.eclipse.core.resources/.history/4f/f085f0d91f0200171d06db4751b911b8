package com.iphone567.uplaod;

import java.io.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileItemFactory;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.commons.io.FilenameUtils;

/**
 * 实现上传功能
 * 
 * @author Nihility-Ming
 *
 */
public class UploadServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// Check that we have a file upload request
		boolean isMultipart = ServletFileUpload.isMultipartContent(request);

		if (!isMultipart) {
			throw new RuntimeException("is not multipart/form-data!");
		}

		// Create a factory for disk-based file items
		FileItemFactory factory = new DiskFileItemFactory();

		// Create a new file upload handler
		ServletFileUpload upload = new ServletFileUpload(factory);

		// Parse the request
		try {
			@SuppressWarnings("unchecked")
			List<FileItem> items = upload.parseRequest(request);
			// Process the uploaded items
			Iterator<FileItem> iter = items.iterator();
			while (iter.hasNext()) {
				FileItem item = (FileItem) iter.next();

				// 是否表单字段
				if (item.isFormField()) {
					processFormField(item);
				} else {
					processUploadedFile(item);
				}
			}
		} catch (FileUploadException e) {
			e.printStackTrace();
		}
	}

	private void processUploadedFile(FileItem item) {
		String fieldName = item.getFieldName();
		String fileName = FilenameUtils.getName(item.getName());
		String contentType = item.getContentType();
		boolean isInMemory = item.isInMemory();
		long sizeInBytes = item.getSize();

		System.out.println("fileName: " + fieldName);
		System.out.println("fileName: " + fileName);
		System.out.println("contentType: " + contentType);
		System.out.println("isInMemory: " + isInMemory);
		System.out.println("sizeInBytes: " + sizeInBytes);

		String path = this.getServletContext().getRealPath("/upload");
		File uploadDir = new File(path);
		if (!uploadDir.exists()) {
			uploadDir.mkdirs();
		}

		File uploadFile = new File(uploadDir, new File(fileName).getName());
		try {
			item.write(uploadFile);
			System.out.println("已经上存到文件路径:" + uploadFile);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private void processFormField(FileItem item) {
		String name = item.getFieldName();
		String value = item.getString();
		System.out.println("name: " + name + " value: " + value);
	}

}
